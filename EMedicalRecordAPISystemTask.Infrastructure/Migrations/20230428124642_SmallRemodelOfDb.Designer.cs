// <auto-generated />
using System;
using EMedicalRecordAPISystemTask.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EMedicalRecordAPISystemTask.Migrations
{
    [DbContext(typeof(EMedicalRecordDbContext))]
    [Migration("20230428124642_SmallRemodelOfDb")]
    partial class SmallRemodelOfDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EMedicalRecordAPISystemTask.Models.AddressInfo", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("AppartmentNum")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HouseNum")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AddressInfo");
                });

            modelBuilder.Entity("EMedicalRecordAPISystemTask.Models.Clinic", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Clinics");
                });

            modelBuilder.Entity("EMedicalRecordAPISystemTask.Models.HumanInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PersonalCode")
                        .HasColumnType("float");

                    b.Property<double>("PhoneNum")
                        .HasColumnType("float");

                    b.Property<byte[]>("ProfilePic")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("eMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HumanInfos");
                });

            modelBuilder.Entity("EMedicalRecordAPISystemTask.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EMedicalRecordAPISystemTask.Models.AddressInfo", b =>
                {
                    b.HasOne("EMedicalRecordAPISystemTask.Models.HumanInfo", "HumanInfo")
                        .WithOne("AddressInfo")
                        .HasForeignKey("EMedicalRecordAPISystemTask.Models.AddressInfo", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HumanInfo");
                });

            modelBuilder.Entity("EMedicalRecordAPISystemTask.Models.HumanInfo", b =>
                {
                    b.HasOne("EMedicalRecordAPISystemTask.Models.User", "User")
                        .WithOne("HumanInfo")
                        .HasForeignKey("EMedicalRecordAPISystemTask.Models.HumanInfo", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EMedicalRecordAPISystemTask.Models.HumanInfo", b =>
                {
                    b.Navigation("AddressInfo")
                        .IsRequired();
                });

            modelBuilder.Entity("EMedicalRecordAPISystemTask.Models.User", b =>
                {
                    b.Navigation("HumanInfo")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
